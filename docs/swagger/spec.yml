swagger: '2.0'
info:
  title: Raster Foundry
  description: An application to find and manipulate large-scale geospatial and raster data
  version: "0.1.0"

host: localhost:9000

schemes:
  - http
  - https

basePath: /api

produces:
  - application/json
consumes:
  - application/json

tags:
  - name: Users
    description: Operations involving users and organizations
  - name: Imagery
    description: Interact with imagery

paths:
  /users/:
    get:
      summary: Get a list of user
      description: |
        The Users API endpoint enables searching and listing users.
      tags:
        - Users
      parameters:
        - $ref: '#/parameters/orderingBase'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
      responses:
        200:
          description: Paginated list of users
          schema:
            $ref: '#/definitions/UserPaginated'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a user
      description: |
        Create a new user.
      tags:
        - Users
      parameters:
        - name: User
          in: body
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: User created
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{uuid}/:
    get:
      summary: Get a single user
      tags:
        - Users
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: User found
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a user
      tags:
        - Users
      parameters:
        - $ref: '#/parameters/uuid'
        - name: User
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        204:
          description: Update successful (No Content)
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /organizations/:
    get:
      summary: Retrieve list of organizations
      tags:
        - Organizations
      parameters:
        - $ref: '#/parameters/orderingBase'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
      responses:
        200:
          description: Paginated list of organizations
          schema:
            $ref: '#/definitions/OrganizationPaginated'
    post:
      summary: Create a new organization
      tags:
        - Organizations
      parameters:
        - name: organization
          in: body
          required: true
          schema:
            $ref: '#/definitions/Organization'
      responses:
        201:
          description: Return newly created organization
          schema:
            $ref: '#/definitions/Organization'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /organizations/{organizationSlug}/:
    get:
      summary: Retrieve details for an organization
      tags:
        - Organizations
      parameters:
        - name: organizationSlug
          in: path
          required: true
          type: string
      responses:
        200:
          description: Returned organization
          schema:
            $ref: '#/definitions/Organization'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update an organization
      tags:
        - Organizations
      parameters:
        - name: organization
          in: body
          required: true
          schema:
            $ref: '#/definitions/Organization'
        - name: organizationSlug
          in: path
          required: true
          type: string
      responses:
        204:
          description: Update successful (No Content)
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /scenes/:
    get:
      summary: Lists paginated scenes that a user has access to
      description: |
        Scenes are groups of images that share metadata and would typically be viewed together on a map.
        They are ingested into Raster RDDs by GeoTrellis and are able to be added to buckets, mosaiced,
        and have other operations performed on them.
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/orderingScene'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/organization'
        - $ref: '#/parameters/maxCloudCover'
        - $ref: '#/parameters/minCloudCover'
        - $ref: '#/parameters/minAcquisitionDatetime'
        - $ref: '#/parameters/maxAcquisitionDatetime'
        - $ref: '#/parameters/minCreateDatetime'
        - $ref: '#/parameters/maxCreateDatetime'
        - $ref: '#/parameters/datasource'
        - $ref: '#/parameters/month'
        - $ref: '#/parameters/maxSunAzimuth'
        - $ref: '#/parameters/minSunAzimuth'
        - $ref: '#/parameters/maxSunElevation'
        - $ref: '#/parameters/minSunElevation'
        - $ref: '#/parameters/tags'
      responses:
        200:
          description: Paginated list of scenes
          schema:
            $ref: '#/definitions/ScenePaginated'
    post:
      summary: Create a new scene
      tags:
        - Imagery
      responses:
        201:
          description: Successfully created a new scene
          schema:
            $ref: '#/definitions/Scene'
        400:
          description: Client error creating a scene
          schema:
            $ref: '#/definitions/Error'
  /scenes/{uuid}/:
    get:
      summary: Retrieve scene details
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Info about Scene
          schema:
            $ref: '#/definitions/Scene'
        404:
          description: |
            UUID parameter does not refer to an scene or the user is not able to view the scene it refers to
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a scene
      tags:
        - Imagery
      parameters:
        - name: scene
          in: body
          required: true
          schema:
            $ref: '#/definitions/Scene'
        - $ref: '#/parameters/uuid'
      responses:
        204:
          description: Update successful (no further processing needed)
        404:
          description: |
            The UUID parameter does not refer to a scene or the user does not have access to the scene it refers to
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a scene (Warning will delete any associated imagery)
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        204:
          description: Deletion successful (no content)
        404:
          description: |
            The UUID parameter does not refer to a scene or the user does not have access to the scene it refers to
          schema:
            $ref: '#/definitions/Error'
  /buckets/:
    get:
      summary: Get list of buckets the user is authorized to view
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/orderingBase'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
      responses:
        200:
          description: Paginated list of buckets the user is authorized to view
          schema:
            $ref: '#/definitions/BucketPaginated'
    post:
      summary: Create a new bucket
      tags:
        - Imagery
      parameters:
        - name: bucket
          in: body
          required: true
          schema:
            $ref: '#/definitions/Bucket'
      responses:
        202:
          description: Bucket details; at this point scene processes may be in-progress
          schema:
            $ref: '#/definitions/Bucket'
  /buckets/{uuid}/:
    get:
      summary: Retrieve bucket details
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
        - $ref: '#/parameters/organization'
        - $ref: '#/parameters/tags'
      responses:
        200:
          description: Info about Bucket
          schema:
            $ref: '#/definitions/Bucket'
        404:
          description: |
            UUID parameter does not refer to a bucket or the user is not able to view the bucket it refers to
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a bucket
      tags:
        - Imagery
      parameters:
        - name: bucket
          in: body
          required: true
          schema:
            $ref: '#/definitions/Bucket'
        - $ref: '#/parameters/uuid'
      responses:
        204:
          description: Update successful (no further processing needed)
        404:
          description: |
            The UUID parameter does not refer to a bucket or the user does not have access to the bucket it refers to
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a bucket
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        204:
          description: Deletion successful (no content)
        404:
          description: The UUID parameter does not refer to a bucket or the user does not have access to the bucket it refers to
          schema:
            $ref: '#/definitions/Error'
  /buckets/{uuid}/scenes/:
    get:
      summary: Get a list of scenes associated with this bucket
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/orderingScene'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/uuid'
        - $ref: '#/parameters/organization'
        - $ref: '#/parameters/maxCloudCover'
        - $ref: '#/parameters/minCloudCover'
        - $ref: '#/parameters/minAcquisitionDatetime'
        - $ref: '#/parameters/maxAcquisitionDatetime'
        - $ref: '#/parameters/minCreateDatetime'
        - $ref: '#/parameters/maxCreateDatetime'
        - $ref: '#/parameters/datasource'
        - $ref: '#/parameters/month'
        - $ref: '#/parameters/maxSunAzimuth'
        - $ref: '#/parameters/minSunAzimuth'
        - $ref: '#/parameters/maxSunElevation'
        - $ref: '#/parameters/minSunElevation'
        - $ref: '#/parameters/tags'          
      responses:
        200:
          description: Paginated list of scenes associated with this bucket
          schema:
            $ref: '#/definitions/ScenePaginated'
    post:
      summary: Create a new association between a scene and this bucket
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
        - name: image
          in: body
          required: true
          schema:
            $ref: '#/definitions/Scene'
      responses:
        202:
          description: Bucket image details; thumbnails and boundary may be in-progress
          schema:
            $ref: '#/definitions/Image'
        200:
          description: Bucket image details; the image already existed
          schema:
            $ref: '#/definitions/Image'
  /buckets/{uuid}/scenes/{sceneUUID}:
    delete:
      summary: Remove a scene from a bucket
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/orderingBase'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/uuid'
        - name: sceneUUID
          in: path
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: Scene has been removed successfully
  /images/:
    get:
      summary: Paginated list of bucket images
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/orderingBase'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/scene'
      responses:
        200:
          description: Paginated list of images
          schema:
            $ref: '#/definitions/ImagePaginated'
    post:
      summary: Create a new image not associated with any Bucket
      tags:
        - Imagery
      parameters:
        - name: image
          in: body
          required: true
          schema:
            $ref: '#/definitions/Image'
      responses:
        202:
          description: Bucket image details; thumbnails and boundary in-progress
          schema:
            $ref: '#/definitions/Image'
  /images/{uuid}:
    get:
      summary: Details of a Image
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Image details
          schema:
            $ref: '#/definitions/Image'
        404:
          description: Image UUID was not found
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a Image
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
        - name: image
          in: body
          required: true
          schema:
            $ref: '#/definitions/Image'
      responses:
        202:
          description: Update successful, further processing required
          schema:
            $ref: '#/definitions/Image'
        200:
          description: Update successful, no further processing required
          schema:
            $ref: '#/definitions/Image'
        404:
          description: Image UUID was not found
          schema:
            $ref: '#/definitions/Error'
  /thumbnails/:
    get:
      summary: Paginated list of thumbnails
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/orderingBase'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/scene'
      responses:
        200:
          description: Paginated list of thumbnail images
          schema:
            $ref: '#/definitions/ThumbnailPaginated'
  /thumbnails/{uuid}/:
    get:
      summary: Thumbnail details
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Details on Thumbnail object
          schema:
            $ref: '#/definitions/Thumbnail'
        404:
          description: Thumbnail UUID was not found
          schema:
            $ref: '#/definitions/Error'
  /boundaries/:
    get:
      summary: Paginated list of boundaries
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/orderingBase'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/scene'
        - $ref: '#/parameters/organization'          
      responses:
        200:
          description: Paginated list of boundaries
          schema:
            $ref: '#/definitions/BoundaryPaginated'
  /boundaries/{uuid}/:
    get:
      summary: Boundary details
      tags:
        - Imagery
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: Details of Boundary object
          schema:
            $ref: '#/definitions/Boundary'
        404:
          description: Boundary UUID was not found
          schema:
            $ref: '#/definitions/Error'

parameters:
  orderingBase:
    name: ordering
    in: query
    description: Field to order results by; meaning of label varies based on model
    type: array
    collectionFormat: pipes
    items:
      type: string
      enum:
        - createdAt,desc
        - createdAt,asc
        - modifiedAt,desc
        - modifiedAt,asc
  organization:
    name: organization
    in: query
    description: UUID for organization to filter by
    type: string
    format: uuid
  scene:
    name: scene
    in: query
    description: UUID for scene
    type: string
    format: uuid
  page:
    name: page
    in: query
    description: Page of results to go to
    type: number
    format: int32
  pageSize:
    name: pageSize
    in: query
    description: Number of results per page in paginated response
    type: number
    format: int32
  uuid:
    name: uuid
    in: path
    required: true
    type: string
    format: uuid
  minCloudCover:
    name: minCloudCover
    description: Only return results with cloud cover greater than this number
    in: query
    type: number
    minimum: 0
    maximum: 1.0
    required: false
  maxCloudCover:
    name: maxCloudCover
    description: Only return results with cloud cover less than this number
    in: query
    type: number
    required: false
  minAcquisitionDatetime:
    name: minAcquisitionDatetime
    description: Only return results acquired after this datetime
    in: query
    type: string
    required: false
    format: datetime
  maxAcquisitionDatetime:
    name: maxAcquisitionDatetime
    description: Only return results acquired before this datetime
    in: query
    type: string
    required: false
    format: datetime
  minCreateDatetime:
    name: minCreateDatetime
    description: Only return results created after this datetime
    in: query
    type: string
    required: false
    format: datetime
  minSunElevation:
    name: minSunElevation
    description: Only return results with sun elevation greater than this value
    in: query
    type: number
    required: false
  maxSunElevation:
    name: maxSunElevation
    description: Only return results with sun elevation less than this value
    in: query
    type: number
    required: false
  minSunAzimuth:
    name: minSunAzimuth
    description: Only return results with sun elevation greater than this value
    in: query
    type: number
    required: false
  maxSunAzimuth:
    name: maxSunAzimuth
    description: Only return results with sun azium greater than this value
    in: query
    type: number
    required: false
  maxCreateDatetime:
    name: maxCreateDatetime
    description: Only return results created before this datetime
    in: query
    type: string
    required: false
    format: datetime
  tags:
    name: tags
    description: Only return results that contain these tags
    in: query
    type: array
    required: false
    items:
      type: string
  datasource:
    name: datasource
    description: Only return results belonging to this datasource
    in: query
    type: array
    required: false
    items:
      type: string
      format: uuid
  month:
    name: month
    description: Only return results from this month
    required: false
    in: query
    type: array
    items:
      type: number
      format: int
      maximum: 12
      minimum: 1
  orderingScene:
    name: ordering
    in: query
    description: Fields to sort scenes by
    type: array
    collectionFormat: pipes
    items:
      type: string
      enum:
        - createdAt,desc
        - createdAt,asc
        - modifiedAt,desc
        - modifiedAt,asc
        - organization,asc
        - organization,desc
        - datasource,asc
        - datasource,desc
        - month,asc
        - month,desc
        - createDatetime,asc
        - createDatetime,desc
        - acquisitionDatetime,asc
        - acquisitionDatetime,desc
        - sunAzimuth,asc
        - sunAzimuth,desc
        - cloudCover,asc
        - cloudCover,desc

definitions:
  BaseModel:
    type: object
    readOnly: true
    properties:
      uuid:
        type: string
        description: unique identifier for object
        format: uuid
      organization:
        type: string
        description: slug label for organization
      createdAt:
        type: string
        description: timestamp of object creation
        format: date-time
      modifiedAt:
        type: string
        description: timestamp of object modificiation
        format: date-time
  UserTrackingMixin:
    type: object
    readOnly: true
    properties:
      createdBy:
        type: string
        format: uri
        description: Link to User who created the Object
      modifiedBy:
        type: string
        format: uri
        description: Link to User who most recently modified the object
  User:
    allOf:
      - $ref: '#/definitions/BaseModel'
    type: object
    required:
      - authId
      - organizationId
    properties:
      id:
        type: string
        description: Internal user id
      authId:
        type: string
        description: Unique identifier provided by Auth0
      organizationId:
        type: string
        description: id for Organization

  PaginatedResponse:
    type: object
    required:
      - count
      - hasNext
      - hasPrevious
      - page
      - pageSize
    properties:
      count:
        type: integer
        format: int32
        readOnly: true
        description: number of total objects matching query
      hasNext:
        type: boolean
        readOnly: true
        description: True if more results can be fetched, otherwise false
      hasPrevious:
        type: boolean
        readOnly: true
        description: True if previous results can be fetched, otherwise false
      page:
        type: integer
        readOnly: true
        format: int32
        description: Current page of paginated query results
      pageSize:
        type: integer
        format: int32
        description: Number of results per page
        readOnly: true
  UserPaginated:
    allOf:
      - $ref: '#/definitions/PaginatedResponse'
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/User'
  ScenePaginated:
    allOf:
      - $ref: '#/definitions/PaginatedResponse'
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/Scene'
          
  OrganizationPaginated:
    allOf:
      - $ref: '#/definitions/PaginatedResponse'
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/Organization'
  Organization:
    type: object
    allOf:
      - $ref: '#/definitions/BaseModel'
    required:
      - name
      - slugLabel
    properties:
      name:
        type: string
        description: Display name for organization
      slugLabel:
        type: string
        description: URL safe version of name
        readOnly: true
  Scene:
    allOf:
      - $ref: '#/definitions/BaseModel'
      - $ref: '#/definitions/UserTrackingMixin'
      - type: object
        properties:
          name:
            type: string
            description: The display name of the bucket
          ingestSizeBytes:
            type: integer
            description: Size of ingested data in bytes.
          accessType:
            type: string
            description: Level of restriction on viewing
            enum:
              - PUBLIC
              - ORGANIZATION
              - OWNERONLY
          resolutionMeters:
            type: number
            description: Size of pixel in meters
          tags:
            type: array
            description: Tags associated with image
            items:
              - type: string
          thumbnails:
            type: object
            description: Thumbnails associated with this image
            properties:
              large:
                type: string
                format: uri
              small:
                type: string
                format: uri
              square:
                type: string
                format: uri
            readOnly: true
          dataSource:
            type: string
            format: uuid
            description: Data source scene originated from
          cloudCover:
            type: number
            format: float32
            description: Proportion of cloud coverage for scene
          acqusitionDate:
            type: string
            format: datetime
            description: Date scene was acquired from instrument (e.g. satellite, drone)
          boundary:
            type: string
            description: URI to boundary for this image
            readOnly: true
          metadata:
            type: object
            # TODO: once common/required elements of an scene are determined they should be lifted to actual columns so that the query planner can gather better statistics
            description: Metadata about the scene -- some aspects we will eventually want to nail down that will be fairly common and/or required for scenes
          thumbnailStatus:
            type: string
            description: status of thumbnail generation
            enum:
              - SUCCESS
              - FAILURE
              - PARTIALFAILURE
              - QUEUED
              - PROCESSING
          boundaryStatus:
            type: string
            description: status of thumbnail generation
            enum:
              - SUCCESS
              - FAILURE
              - PARTIALFAILURE
              - QUEUED
              - PROCESSING
          status:
            type: string
            description: overall status of scene
            enum:
              - UPLOADING
              - SUCCESS
              - FAILURE
              - PARTIALFAILURE
              - QUEUED
              - PROCESSING
  Bucket:
    allOf:
      - $ref: '#/definitions/BaseModel'
      - $ref: '#/definitions/UserTrackingMixin'
      - type: object
        properties:
          name:
            type: string
            description: The display name of the bucket
          slugLabel:
            type: string
            description: URL-safe version of name
            readOnly: true
          description:
            type: string
            description: Long-form description of the bucket
          accessType:
            type: string
            description: Level of restriction on viewing
            enum:
              - PUBLIC
              - ORGANIZATION
              - OWNERONLY
          tags:
            type: array
            items:
              - type: string
  Image:
    allOf:
      - $ref: '#/definitions/BaseModel'
      - $ref: '#/definitions/UserTrackingMixin'
      - type: object
        properties:
          name:
            type: string
            description: name of image, displayed in UI
          accessType:
            type: string
            description: Level of restriction on viewing
            enum:
              - PUBLIC
              - ORGANIZATION
              - OWNERONLY
          fileName:
            type: string
            description: Name of the image file
          sourceURI:
            type: string
            description: URI to original source. This should include a protocol-like prefix to identify where it is located http://, s3://, etc.
          rawDataBytes:
            type: integer
            description: Size of original uploaded imagery in bytes
          bands:
            type: array
            description: list of band types for image; a single band denotes a single band image, multiple bands should be listed in order (e.g if it is an RGB tiff then bands should be [red, green blue])
            items:
              - type: string
          scene:
            type: string
            format: uuid
            description: Scene that image is associated with
          metadata:
            type: object
            description: Metadata about this image
        required:
          - fileName
          - sourceURI
  BucketPaginated:
    allOf:
      - $ref: '#/definitions/PaginatedResponse'
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/Bucket'
  ImagePaginated:
    allOf:
      - $ref: '#/definitions/PaginatedResponse'
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/Image'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  Thumbnail:
    allOf:
      - $ref: '#/definitions/BaseModel'
      - type: object
        properties:
          widthPx:
            type: integer
            format: int32
            description: The width of the thumbnail, in pixels
          scene:
            type: string
            format: uuid
            description: Scene that image is associated with
          heightPx:
            type: integer
            format: int32
            description: The height of the thumbnail, in pixels
          size:
            type: string
            description: Summary of size
            enum:
              - small
              - large
              - square
          url:
            type: string
            format: uri
            description: A client-accessible URL pointing to the image file
  ThumbnailPaginated:
    allOf:
    - $ref: '#/definitions/PaginatedResponse'
    - type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/definitions/Thumbnail'
  Boundary:
    allOf:
      - $ref: '#/definitions/BaseModel'
      - type: object
        properties:
          scene:
            type: string
            format: uuid
            description: Scene that image is associated with
          geojson:
            type: object
            description: GeoJSON representing the boundary geometry
  BoundaryPaginated:
    allOf:
      - $ref: '#/definitions/PaginatedResponse'
      - type: object
        properties:
          results:
            type: array
            items:
              $ref: '#/definitions/Boundary'

